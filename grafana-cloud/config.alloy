logging {
	level  = "debug"
	format = "logfmt"
}

tracing {
	sampling_fraction = 1
	write_to = [otelcol.exporter.otlp.default.input]
}

prometheus.scrape "default" {
	targets = [{ 
    __address__ = "backend-api:3001",
  }]

	forward_to = [prometheus.remote_write.default.receiver]
  metrics_path = "/metrics"
}

otelcol.receiver.otlp "default" {
  grpc {}

  output {
    metrics = [otelcol.exporter.prometheus.default.input]
  }
}

otelcol.exporter.otlp "default" {
	client {
		endpoint = env("GRAFANA_CLOUD_TEMPO_URL")
		auth     = otelcol.auth.basic.default.handler
	}
}

otelcol.exporter.prometheus "default" {
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.remote_write "default" {
  endpoint {
    url = env("GRAFANA_CLOUD_PROMETHEUS_PUSH_URL")
    basic_auth {
      username = env("GRAFANA_CLOUD_PROMETHEUS_USERNAME")
	    password = env("GRAFANA_CLOUD_API_KEY")
    }
  }
}

otelcol.auth.basic "default" {
	username = env("GRAFANA_CLOUD_TEMPO_USERNAME")
	password = env("GRAFANA_CLOUD_API_KEY")
}

